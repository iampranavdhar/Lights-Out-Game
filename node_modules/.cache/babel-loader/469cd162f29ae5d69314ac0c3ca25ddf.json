{"ast":null,"code":"var _jsxFileName = \"/home/pranav/Desktop/make-a-laugh Challenge/crack-a-laugh/lights-out/src/Cell.jsx\";\nimport React, { Component } from 'react';\nimport \"./Cell.css\";\n/** A single cell on the board.\n *\n * This has no state --- just two props:\n *\n * - flipCellsAroundMe: a function rec'd from the board which flips this\n *      cell and the cells around of it\n *\n * - isLit: boolean, is this cell lit?\n *\n * This handles clicks --- by calling flipCellsAroundMe\n *\n **/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cell(props) {\n  const handleClick = evt => {\n    // call up to the board to flip cells around this cell\n    flipCellsAroundMe();\n  };\n\n  let classes = \"Cell\" + (props.isLit ? \" Cell-lit\" : \"\");\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    className: classes,\n    onClick: handleClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Cell;\nexport default Cell;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"sources":["/home/pranav/Desktop/make-a-laugh Challenge/crack-a-laugh/lights-out/src/Cell.jsx"],"names":["React","Component","Cell","props","handleClick","evt","flipCellsAroundMe","classes","isLit"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,YAAP;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAEnB,QAAMC,WAAW,GAAIC,GAAD,IAAS;AAC3B;AACAC,IAAAA,iBAAiB;AAClB,GAHD;;AAKA,MAAIC,OAAO,GAAG,UAAUJ,KAAK,CAACK,KAAN,GAAc,WAAd,GAA4B,EAAtC,CAAd;AAEA,sBAAO;AAAI,IAAA,SAAS,EAAED,OAAf;AAAwB,IAAA,OAAO,EAAEH;AAAjC;AAAA;AAAA;AAAA;AAAA,UAAP;AACC;;KAVMF,I;AAaT,eAAeA,IAAf","sourcesContent":["import React, {Component} from 'react'\nimport \"./Cell.css\"\n\n\n/** A single cell on the board.\n *\n * This has no state --- just two props:\n *\n * - flipCellsAroundMe: a function rec'd from the board which flips this\n *      cell and the cells around of it\n *\n * - isLit: boolean, is this cell lit?\n *\n * This handles clicks --- by calling flipCellsAroundMe\n *\n **/\n\nfunction Cell(props) {\n\n  const handleClick = (evt) => {\n    // call up to the board to flip cells around this cell\n    flipCellsAroundMe();\n  };\n\n  let classes = \"Cell\" + (props.isLit ? \" Cell-lit\" : \"\");\n\n  return <td className={classes} onClick={handleClick} />;\n  }\n\n\nexport default Cell"]},"metadata":{},"sourceType":"module"}