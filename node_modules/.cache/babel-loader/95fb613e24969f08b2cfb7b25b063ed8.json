{"ast":null,"code":"import _slicedToArray from \"/home/pranav/Desktop/make-a-laugh Challenge/crack-a-laugh/lights-out/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/pranav/Desktop/make-a-laugh Challenge/crack-a-laugh/lights-out/src/Leaderboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Leaderboard() {\n  _s();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        persons = _useState2[0],\n        setPersons = _useState2[1];\n\n  useEffect(() => {\n    const url = new URL(\"http://localhost:8000/graphql/\");\n    url.searchParams.append(\"query\", \"query { allPersons { name, wins, loses } }\");\n    axios.get(url).then(({\n      data\n    }) => setPersons(data.data.allPersons));\n  }, []);\n  return (\n    /*#__PURE__*/\n    // return a leaderboard using the html table tag\n    // data should NOT be hardcoded, should be fetch using graphql from localhost:8000/graphql/\n    // The styling is not a priority. You can refer to SecondStage.png but not necessary to be similar\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: 'table',\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Wins\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Loses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: entries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: entry.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry.wins\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry.loses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Leaderboard, \"3dL94kAggHNyJLHmh8hlLChOUrQ=\");\n\n_c = Leaderboard;\nexport default Leaderboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"sources":["/home/pranav/Desktop/make-a-laugh Challenge/crack-a-laugh/lights-out/src/Leaderboard.jsx"],"names":["React","useState","useEffect","axios","Leaderboard","persons","setPersons","url","URL","searchParams","append","get","then","data","allPersons","entries","map","entry","index","name","wins","loses"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AAAA,oBACWH,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,QACZI,OADY;AAAA,QACHC,UADG;;AAGnBJ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMK,GAAG,GAAG,IAAIC,GAAJ,CAAQ,gCAAR,CAAZ;AACAD,IAAAA,GAAG,CAACE,YAAJ,CAAiBC,MAAjB,CAAwB,OAAxB;AACAP,IAAAA,KAAK,CAACQ,GAAN,CAAUJ,GAAV,EACKK,IADL,CACU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAcP,UAAU,CAACO,IAAI,CAACA,IAAL,CAAUC,UAAX,CADlC;AAEH,GALQ,EAKN,EALM,CAAT;AAQA;AAAA;AACI;AACA;AACA;AACA;AAAA,6BAEI;AAAO,QAAA,SAAS,EAAE,OAAlB;AAAA,gCACA;AAAA,iCACA;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADA,eASA;AAAA,oBACCC,OAAO,CAACC,GAAR,CAAY,CAACC,KAAD,EAAQC,KAAR,kBACT;AAAA,oCACI;AAAA,qCAAI;AAAA,0BAASD,KAAK,CAACE;AAAf;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKF,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAKH,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA,aAASH,KAAT;AAAA;AAAA;AAAA;AAAA,kBADH;AADD;AAAA;AAAA;AAAA;AAAA,gBATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AA2BH;;GAtCQd,W;;KAAAA,W;AAwCT,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Leaderboard() {\n    const [persons, setPersons] = useState([]);\n\n    useEffect(() => {\n        const url = new URL(\"http://localhost:8000/graphql/\");\n        url.searchParams.append(\"query\", `query { allPersons { name, wins, loses } }`);\n        axios.get(url)\n            .then(({ data }) => setPersons(data.data.allPersons))\n    }, [])\n\n\n    return (\n        // return a leaderboard using the html table tag\n        // data should NOT be hardcoded, should be fetch using graphql from localhost:8000/graphql/\n        // The styling is not a priority. You can refer to SecondStage.png but not necessary to be similar\n        <div>\n            \n            <table className={'table'}>\n            <thead>\n            <tr>\n                <th>Name</th>\n                <th>Wins</th>\n                <th>Loses</th>\n            </tr>\n            </thead>\n\n            <tbody>\n            {entries.map((entry, index) => (\n                <tr key={index}>\n                    <td><strong>{entry.name}</strong></td>\n                    <td>{entry.wins}</td>\n                    <td>{entry.loses}</td>\n                </tr>\n            ))}\n            </tbody>\n        </table>\n        </div>\n    );\n}\n\nexport default Leaderboard;"]},"metadata":{},"sourceType":"module"}