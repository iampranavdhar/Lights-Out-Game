{"ast":null,"code":"import _slicedToArray from \"/home/pranav/Desktop/make-a-laugh Challenge/crack-a-laugh/lights-out/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/pranav/Desktop/make-a-laugh Challenge/crack-a-laugh/lights-out/src/Leaderboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Leaderboard() {\n  _s();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        persons = _useState2[0],\n        setPersons = _useState2[1];\n\n  useEffect(() => {\n    const url = new URL(\"http://localhost:8000/graphql/\");\n    url.searchParams.append(\"query\", \"query { allPersons { name, wins, loses } }\");\n    axios.get(url).then(({\n      data\n    }) => setEntries(data.data.allPersons));\n  }, []);\n  return (\n    /*#__PURE__*/\n    // return a leaderboard using the html table tag\n    // data should NOT be hardcoded, should be fetch using graphql from localhost:8000/graphql/\n    // The styling is not a priority. You can refer to SecondStage.png but not necessary to be similar\n    _jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"table_score\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Wins\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Loses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: persons.map((person, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: person.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: person.wins\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: person.loses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Leaderboard, \"3dL94kAggHNyJLHmh8hlLChOUrQ=\");\n\n_c = Leaderboard;\nexport default Leaderboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"sources":["/home/pranav/Desktop/make-a-laugh Challenge/crack-a-laugh/lights-out/src/Leaderboard.jsx"],"names":["React","useState","useEffect","axios","Leaderboard","persons","setPersons","url","URL","searchParams","append","get","then","data","setEntries","allPersons","map","person","index","name","wins","loses"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AAAA,oBACWH,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,QACZI,OADY;AAAA,QACHC,UADG;;AAGnBJ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMK,GAAG,GAAG,IAAIC,GAAJ,CAAQ,gCAAR,CAAZ;AACAD,IAAAA,GAAG,CAACE,YAAJ,CAAiBC,MAAjB,CAAwB,OAAxB;AACAP,IAAAA,KAAK,CAACQ,GAAN,CAAUJ,GAAV,EACKK,IADL,CACU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAcC,UAAU,CAACD,IAAI,CAACA,IAAL,CAAUE,UAAX,CADlC;AAEH,GALQ,EAKN,EALM,CAAT;AAQA;AAAA;AACI;AACA;AACA;AACA,YAAC,KAAD,CAAO,QAAP;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,KAAK,EAAC,aAAb;AAAA,gCACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAA,oBACKV,OAAO,CAACW,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACT;AAAA,oCACI;AAAA,qCAAI;AAAA,0BAASD,MAAM,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKF,MAAM,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAKH,MAAM,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA,aAASH,KAAT;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAwBH;;GAnCQd,W;;KAAAA,W;AAqCT,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Leaderboard() {\n    const [persons, setPersons] = useState([]);\n\n    useEffect(() => {\n        const url = new URL(\"http://localhost:8000/graphql/\");\n        url.searchParams.append(\"query\", `query { allPersons { name, wins, loses } }`);\n        axios.get(url)\n            .then(({ data }) => setEntries(data.data.allPersons))\n    }, [])\n\n\n    return (\n        // return a leaderboard using the html table tag\n        // data should NOT be hardcoded, should be fetch using graphql from localhost:8000/graphql/\n        // The styling is not a priority. You can refer to SecondStage.png but not necessary to be similar\n        <React.Fragment>\n            <h3>Your score</h3>\n            <table class=\"table_score\">\n                <tr>\n                    <th>Name</th>\n                    <th>Wins</th>\n                    <th>Loses</th>\n                </tr>\n                <tbody>\n                    {persons.map((person, index) => (\n                        <tr key={index}>\n                            <td><strong>{person.name}</strong></td>\n                            <td>{person.wins}</td>\n                            <td>{person.loses}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </React.Fragment>\n    );\n}\n\nexport default Leaderboard;"]},"metadata":{},"sourceType":"module"}